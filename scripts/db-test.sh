#!/bin/bash

# Script para verificar la conexi√≥n a la base de datos
echo "üîç Testing database connection..."

# Verificar si Docker est√° ejecut√°ndose
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Error: Docker no est√° ejecut√°ndose. Por favor, inicia Docker Desktop."
    exit 1
fi

# Verificar si el archivo .env existe
if [ ! -f ".env" ]; then
    echo "‚ùå Error: No se encontr√≥ el archivo .env"
    echo "üí° Copia .env.example como .env y configura las variables"
    exit 1
fi

# Cargar variables de entorno
source .env

# Verificar si el contenedor de la base de datos est√° ejecut√°ndose
if ! docker ps | grep -q "$POSTGRES_CONTAINER_NAME"; then
    echo "‚ö†Ô∏è El contenedor de la base de datos no est√° ejecut√°ndose"
    echo "üöÄ Iniciando base de datos..."
    ./scripts/db-start.sh
    echo "‚è≥ Esperando que la base de datos est√© lista..."
    sleep 5
fi

# Funci√≥n para probar la conexi√≥n
test_connection() {
    echo "üîå Probando conexi√≥n a PostgreSQL..."
    
    # Usar docker exec para probar la conexi√≥n
    if docker exec -e PGPASSWORD="$POSTGRES_PASSWORD" "$POSTGRES_CONTAINER_NAME" psql -h localhost -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 1;" > /dev/null 2>&1; then
        echo "‚úÖ Conexi√≥n a la base de datos exitosa!"
        
        # Obtener informaci√≥n de la base de datos
        echo "üìä Informaci√≥n de la base de datos:"
        docker exec -e PGPASSWORD="$POSTGRES_PASSWORD" "$POSTGRES_CONTAINER_NAME" psql -h localhost -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT version();" | head -3
        
        # Listar tablas existentes
        echo "üìã Tablas existentes:"
        TABLES=$(docker exec -e PGPASSWORD="$POSTGRES_PASSWORD" "$POSTGRES_CONTAINER_NAME" psql -h localhost -U "$POSTGRES_USER" -d "$POSTGRES_DB" -t -c "SELECT table_name FROM information_schema.tables WHERE table_schema = 'public';" | tr -d ' ' | grep -v '^$')
        
        if [ -z "$TABLES" ]; then
            echo "   üì≠ No hay tablas creadas a√∫n"
            echo "   üí° Esto es normal para una nueva instalaci√≥n"
        else
            echo "$TABLES"
        fi
        
        echo ""
        echo "üéØ Par√°metros de conexi√≥n para tu aplicaci√≥n:"
        echo "   Host: localhost"
        echo "   Port: $POSTGRES_PORT"
        echo "   Database: $POSTGRES_DB"
        echo "   Username: $POSTGRES_USER"
        echo "   Password: [configurado en .env]"
        
        return 0
    else
        echo "‚ùå Error: No se pudo conectar a la base de datos"
        echo "üîß Verificando estado del contenedor..."
        
        if docker ps | grep -q "$POSTGRES_CONTAINER_NAME"; then
            echo "‚úÖ El contenedor est√° ejecut√°ndose"
            echo "‚è≥ La base de datos podr√≠a estar inici√°ndose. Esperando 10 segundos..."
            sleep 10
            test_connection
        else
            echo "‚ùå El contenedor no est√° ejecut√°ndose"
            echo "üí° Intenta: ./scripts/db-start.sh"
        fi
        
        return 1
    fi
}

# Ejecutar test de conexi√≥n
test_connection

if [ $? -eq 0 ]; then
    echo ""
    echo "üéâ ¬°Base de datos lista para usar!"
    echo "üöÄ Ahora puedes ejecutar: npm run start:dev"
else
    echo ""
    echo "‚ùå Problemas de conexi√≥n a la base de datos"
    echo "üîß Pasos para solucionar:"
    echo "   1. Verifica que Docker est√© ejecut√°ndose"
    echo "   2. Ejecuta: ./scripts/db-start.sh"
    echo "   3. Espera unos segundos y vuelve a intentar"
    echo "   4. Verifica las credenciales en el archivo .env"
fi
